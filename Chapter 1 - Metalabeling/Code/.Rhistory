}
moltenDD <- fortify(tSeries[, choose], melt = TRUE)
ggplot(moltenDD, aes(x = Index, y = Value, col = Series)) +
geom_line(show.legend = FALSE) + xlab(element_blank()) + ylab("Log-prices") +
ggtitle(title)
}
plotTimeSeries(y_t)
plotTimeSeries(r_t, title = "S&P500 Index")
plotTimeSeries(y_t, title = "S&P500 Index")
plotTimeSeries <- function(tSeries, title = "", choose = NULL) {
if(is.null(choose)) {
choose <- 1:ncol(tSeries)
}
moltenDD <- fortify(tSeries[, choose], melt = TRUE)
ggplot(moltenDD, aes(x = Index, y = Value, col = Series)) +
geom_line(show.legend = FALSE) + xlab(element_blank()) + ylab("Log-returns") +
ggtitle(title)
}
plotTimeSeries(r_t, title = "S&P500 Index")
plotTimeSeries <- function(tSeries, title = "", choose = NULL) {
if(is.null(choose)) {
choose <- 1:ncol(tSeries)
}
moltenDD <- fortify(tSeries[, choose], melt = TRUE)
ggplot(moltenDD, aes(x = Index, y = Value, col = Series)) +
geom_line(show.legend = FALSE) + xlab(element_blank()) + ylab(element_blank()) +
ggtitle(title)
}
acf(r_t)
head(r_t)
head(na.omit(r_t))
acf(na.omit(r_t))
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 400)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
yfit
r_t <- na.omit(diff(y_t))
colnames(r_t) <- "Log-Returns"
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 400)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 400)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
lines(xfit, yfit, col = "black", lwd = 1)
names(h)
h$mids
?hist
# getSymbols("^GSPC", from = "2015-01-01", to = "2018-10-01")
getSymbols("^GSPC", from = "2004-01-01", to = "2020-10-01")
y_t <- log(GSPC$GSPC.Adjusted)
colnames(y_t) <- "Log-Prices"
r_t <- na.omit(diff(y_t))
# getSymbols("^GSPC", from = "2015-01-01", to = "2018-10-01")
getSymbols("^GSPC", from = "2004-01-01", to = "2020-10-01")
y_t <- log(GSPC$GSPC.Adjusted)
colnames(y_t) <- "Log-Prices"
r_t <- na.omit(diff(y_t))
colnames(r_t) <- "Log-Returns"
plotTimeSeries(y_t, title = "S&P500 Index")
plotTimeSeries(r_t, title = "S&P500 Index")
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 400)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
lines(xfit, yfit, col = "black", lwd = 1)
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
h$mids
y_t <- log(GSPC$GSPC.Close)
colnames(y_t) <- "Log-Prices"
r_t <- na.omit(diff(y_t))
colnames(r_t) <- "Log-Returns"
plotTimeSeries(y_t, title = "S&P500 Index")
plotTimeSeries(r_t, title = "S&P500 Index")
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 400)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
xfit <- seq(min(r_t), max(r_t), length = 4000)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
library(MASS)
fit <- fitdistr(r_t, "normal")
para <- fit$estimate
para
mean(r_t)
sd(r_t)
para
fit
hist(r_t, prob = TRUE)
curve(dnorm(x, para[1], para[2]), col = 2, add = TRUE)
curve(dnorm(x, para[1], para[2]), col = 3, add = TRUE)
curve(dnorm(r_t, para[1], para[2]), col = 2, add = TRUE)
hist(r_t, breaks = 100, density = 40)
curve(dnorm(r_t, para[1], para[2]), col = 2, add = TRUE)
r_t
?dnorm
hist(r_t, breaks = 100, density = 40)
curve(dnorm(as.vector(r_t), mean = para[1], sd = para[2]), col = 2, add = TRUE)
dnorm(r_t[1], para[1], para[@])
dnorm(r_t[1], para[1], para[2])
dnorm(as.vector(r_t), para[1], para[2])
dnorm(r_t, para[1], para[2])
hist(r_t, breaks = 100, density = 40, probability = TRUE)
curve(dnorm(as.vector(r_t), mean = para[1], sd = para[2]), col = 2, add = TRUE)
dnorm(as.vector(r_t), mean = para[1], sd = para[2])
dnorm(132)
dnorm(1.2)
hist(r_t, breaks = 100, density = 40, probability = TRUE)
hist(r_t, breaks = 100, density = 40, prob = TRUE)
library(fitdistrplus)
install.packages("fitdistrplus")
library(fitdistrplus)
FIT <- fitdist(r_t, "norm")  # note: it is "norm" not "normal"
r_t
library(fitdistrplus)
FIT <- fitdist(as.vector(r_t), "norm")  # note: it is "norm" not "normal"
plot(FIT)
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")/length(r_t)
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")
names(h)
h$density
h$breaks
h
xfit <- seq(min(r_t), max(r_t), length = 4000)
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")
str(h)
h
plot(h)
plot(h/length(r_t))
h$density <- h$density/length(r_t)
plot(h)
h
sum(h$density)
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")
sum(h$density)
h$mids
diff(h$mids[1:2])
hist(r_t, prob = TRUE)
a0 <- hist(r_t, prob = TRUE)
a0
sum(a0$density)
a0 <- hist(r_t, prob = TRUE, density = 100)
sum(a0$density)
a0 <- hist(r_t, prob = TRUE, breaks = 100)
sum(a0$density)
a0 <- hist(r_t, prob = TRUE, breaks = 100, freq = FALSE)
a0
# getSymbols("^GSPC", from = "2015-01-01", to = "2018-10-01")
getSymbols("^GSPC", from = "1998-01-01", to = "2020-10-01")
y_t <- log(GSPC$GSPC.Adjusted)
colnames(y_t) <- "Log-Prices"
r_t <- na.omit(diff(y_t))
colnames(r_t) <- "Log-Returns"
plotTimeSeries(y_t, title = "S&P500 Index")
plotTimeSeries(r_t, title = "S&P500 Index")
library(fitdistrplus)
FIT <- fitdist(as.vector(r_t), "norm")  # note: it is "norm" not "normal"
plot(FIT)
h <- hist(r_t, breaks = 100, density = 40,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 4000)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
h <- hist(r_t, breaks = 50, density = 50,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 4000)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
# getSymbols("^GSPC", from = "2015-01-01", to = "2018-10-01")
getSymbols("^GSPC", from = "1990-01-01", to = "2020-10-01")
head(GSPC$GSPC.Adjusted)
y_t <- log(GSPC$GSPC.Adjusted)
colnames(y_t) <- "Log-Prices"
r_t <- na.omit(diff(y_t))
colnames(r_t) <- "Log-Returns"
plotTimeSeries(y_t, title = "S&P500 Index")
plotTimeSeries(r_t, title = "S&P500 Index")
library(fitdistrplus)
FIT <- fitdist(as.vector(r_t), "norm")  # note: it is "norm" not "normal"
plot(FIT)
h <- hist(r_t, breaks = 50, density = 50,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 4000)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
r_t <- na.omit(diff(y_t))
r_t <- to.weekly(r_t)
colnames(r_t) <- "Log-Returns"
r_t
y_t <- log(GSPC$GSPC.Adjusted)
colnames(y_t) <- "Log-Prices"
head(y_t)
r_t <- na.omit(diff(y_t))
r_t
r_t <- to.weekly(r_t)
r_t
r_t <- to.weekly(r_t)$r_t.Close
colnames(r_t) <- "Log-Returns"
plotTimeSeries(y_t, title = "S&P500 Index")
plotTimeSeries(r_t, title = "S&P500 Index")
library(fitdistrplus)
FIT <- fitdist(as.vector(r_t), "norm")  # note: it is "norm" not "normal"
plot(FIT)
h <- hist(r_t, breaks = 50, density = 50,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 4000)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
# getSymbols("^GSPC", from = "2015-01-01", to = "2018-10-01")
getSymbols("^GSPC", from = "1990-01-01", to = "2016-10-01")
y_t <- log(GSPC$GSPC.Adjusted)
colnames(y_t) <- "Log-Prices"
r_t <- na.omit(diff(y_t))
r_t <- to.weekly(r_t)$r_t.Close
colnames(r_t) <- "Log-Returns"
plotTimeSeries(y_t, title = "S&P500 Index")
plotTimeSeries(r_t, title = "S&P500 Index")
library(fitdistrplus)
FIT <- fitdist(as.vector(r_t), "norm")  # note: it is "norm" not "normal"
plot(FIT)
h <- hist(r_t, breaks = 50, density = 50,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 4000)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
# format(index(dfComplete)[1], format = "%d")
# __________
colnames(y_t) <- "LogPrices"
r_t <- na.omit(diff(y_t))
r_t <- to.weekly(r_t)$r_t.Close
colnames(r_t) <- "LogReturns"
library(ggplot2)
ggplot(r_t, aes(x = LogReturns)) +
geom_histogram(aes(y = ..density..), fill = "red") +
stat_function(
fun = dnorm,
args = with(r_t, c(mean = mean(r_t), sd = sd(r_t)))
) +
scale_x_continuous("Miles per gallon") +
opts(title = "Histogram with Normal Curve")
ggplot(r_t, aes(x = LogReturns)) +
geom_histogram(aes(y = ..density..), fill = "red") +
stat_function(
fun = dnorm,
args = with(r_t, c(mean = mean(r_t), sd = sd(r_t)))
) +
scale_x_continuous("Miles per gallon") +
ggtitle("Histogram with Normal Curve")
ggplot(r_t, aes(x = LogReturns)) +
geom_histogram(aes(y = ..density..), fill = "black") +
stat_function(
fun = dnorm,
args = with(r_t, c(mean = mean(r_t), sd = sd(r_t)))
) +
scale_x_continuous("Miles per gallon") +
ggtitle("Histogram with Normal Curve")
ggplot(r_t, aes(x = LogReturns)) +
geom_histogram(aes(y = ..density..), fill = "grey") +
stat_function(
fun = dnorm,
args = with(r_t, c(mean = mean(r_t), sd = sd(r_t)))
) +
scale_x_continuous("Miles per gallon") +
ggtitle("Histogram with Normal Curve")
?geom_histogram
ggplot(r_t, aes(x = LogReturns)) +
geom_histogram(aes(y = ..density..), fill = "grey", bins = 40) +
stat_function(
fun = dnorm,
args = with(r_t, c(mean = mean(r_t), sd = sd(r_t)))
) +
scale_x_continuous("Miles per gallon") +
ggtitle("Histogram with Normal Curve")
ggplot(r_t, aes(x = LogReturns)) +
geom_histogram(aes(y = ..density..), fill = "grey", bins = 100) +
stat_function(
fun = dnorm,
args = with(r_t, c(mean = mean(r_t), sd = sd(r_t)))
) +
scale_x_continuous("Miles per gallon") +
ggtitle("Histogram with Normal Curve")
# getSymbols("^GSPC", from = "2015-01-01", to = "2018-10-01")
getSymbols("^GSPC", from = "2012-01-01", to = "2018-10-01")
y_t <- log(GSPC$GSPC.Adjusted)
colnames(y_t) <- "LogPrices"
r_t <- na.omit(diff(y_t))
r_t <- to.weekly(r_t)$r_t.Close
colnames(r_t) <- "LogReturns"
plotTimeSeries(y_t, title = "S&P500 Index")
plotTimeSeries(r_t, title = "S&P500 Index")
library(ggplot2)
ggplot(r_t, aes(x = LogReturns)) +
geom_histogram(aes(y = ..density..), fill = "grey", bins = 100) +
stat_function(
fun = dnorm,
args = with(r_t, c(mean = mean(r_t), sd = sd(r_t)))
) +
scale_x_continuous("Miles per gallon") +
ggtitle("Histogram with Normal Curve")
h <- hist(r_t, breaks = 50, density = 50,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(r_t), max(r_t), length = 4000)
yfit <- dnorm(xfit, mean = mean(r_t), sd = sd(r_t))
yfit <- yfit*diff(h$mids[1:2])*length(r_t)
lines(xfit, yfit, col = "black", lwd = 1)
# format(index(dfComplete)[1], format = "%d")
# __________
ggplot(r_t, aes(x = LogReturns)) +
geom_histogram(aes(y = ..density..), fill = "grey", bins = 50) +
stat_function(
fun = dnorm,
args = with(r_t, c(mean = mean(r_t), sd = sd(r_t)))
) +
scale_x_continuous("Miles per gallon") +
ggtitle("Histogram with Normal Curve")
ggplot(r_t, aes(x = LogReturns)) +
geom_histogram(aes(y = ..density..), fill = "grey", bins = 30) +
stat_function(
fun = dnorm,
args = with(r_t, c(mean = mean(r_t), sd = sd(r_t)))
) +
scale_x_continuous("Miles per gallon") +
ggtitle("Histogram with Normal Curve")
GSPC <- getSymbols("^GSPC", from = "2010-01-01", to = "2015-12-31", auto.assign = FALSE)
str(GSPC)
prices <- Cl(GSPC)
R_daily <- diff(log(prices))[-1]
plot(R_daily, col = 'blue', lwd = 1, ylab = "log-return", main = "S&P 500 index")
lines(xfit, yfit, col = "blue", lwd=2)
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.55*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd=2)
lines(xfit, yfit, col = "blue", lwd=2)
lines(xfit, yfit, col = "blue", lwd=2)
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily), sd = 0.55*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd=2)
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 7e-4, sd = 0.55*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.55*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
R_daily <- to.weekly(diff(log(prices))[-1])
plot(R_daily, col = 'blue', lwd = 1, ylab = "log-return", main = "S&P 500 index")
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.55*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
GSPC <- getSymbols("^GSPC", from = "2000-01-01", to = "2015-12-31", auto.assign = FALSE)
prices <- Cl(GSPC)
R_daily <- to.weekly(diff(log(prices))[-1])
plot(R_daily, col = 'blue', lwd = 1, ylab = "log-return", main = "S&P 500 index")
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.55*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.95*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.75*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.65*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.7*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.68*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
GSPC <- getSymbols("^GSPC", from = "2000-01-01", to = "2015-12-31", auto.assign = FALSE)
prices <- Cl(GSPC)
R_daily <- to.monthly(diff(log(prices))[-1])
plot(R_daily, col = 'blue', lwd = 1, ylab = "log-return", main = "S&P 500 index")
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.68*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
GSPC <- getSymbols("^GSPC", from = "1980-01-01", to = "2015-12-31", auto.assign = FALSE)
prices <- Cl(GSPC)
R_daily <- to.monthly(diff(log(prices))[-1])
plot(R_daily, col = 'blue', lwd = 1, ylab = "log-return", main = "S&P 500 index")
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.68*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
plot(R_daily, col = 'blue', lwd = 1, ylab = "log-return", main = "S&P 500 index")
min(R_daily)
mean(R_daily)
exp(mean(R_daily))
GSPC <- getSymbols("^GSPC", from = "1990-01-01", to = "2015-12-31", auto.assign = FALSE)
prices <- Cl(GSPC)
R_daily <- to.monthly(diff(log(prices))[-1])
plot(R_daily, col = 'blue', lwd = 1, ylab = "log-return", main = "S&P 500 index")
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.68*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
yfit <- dnorm(xfit, mean = mean(R_daily) + 5e-4, sd = 0.8*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
yfit <- dnorm(xfit, mean = mean(R_daily), sd = 0.8*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
yfit <- dnorm(xfit, mean = mean(R_daily), sd = 0.9*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily), sd = 0.9*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
yfit <- dnorm(xfit, mean = mean(R_daily), sd = 0.85*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily), sd = 0.85*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
qqnorm(R_daily, col = "blue", main = "QQ plot of log-returns")
qqline(R_daily, lwd = 2)
?qqline
?qqnorm
R_daily <- to.weekly(diff(log(prices))[-1])
plot(R_daily, col = 'blue', lwd = 1, ylab = "log-return", main = "S&P 500 index")
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily), sd = 0.85*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
qqnorm(R_daily, col = "blue", main = "QQ plot of log-returns")
qqline(R_daily, lwd = 2)
R_daily <- diff(log(prices))[-1]
plot(R_daily, col = 'blue', lwd = 1, ylab = "log-return", main = "S&P 500 index")
h <- hist(as.vector(R_daily), breaks = 100, prob = TRUE, col = "lightgray",
xlab = "return", main = "Histogram of log-returns")
xfit <- seq(min(R_daily), max(R_daily), length = 100)
yfit <- dnorm(xfit, mean = mean(R_daily), sd = 0.85*sd(R_daily))
lines(xfit, yfit, col = "blue", lwd = 2)
qqnorm(R_daily, col = "blue", main = "QQ plot of log-returns")
qqline(R_daily, lwd = 2)
R_daily <- diff(log(prices))[-1]
acf(R_daily)
GSPC <- getSymbols("^GSPC", from = "2010-01-01", to = "2015-12-31", auto.assign = FALSE)
prices <- Cl(GSPC)
R_daily <- diff(log(prices))[-1]
acf(R_daily)
?acf
a0 <- acf(R_daily, plot = TRUE)
a0 <- acf(R_daily, plot = FALSE)
plot(a0)
plot(a0)
plot(a0, title = "Hhh")
?plot
plot(a0, main = "Hhh")
acf(R_daily, main="hh")
acf(R_daily, main="Autocorrelation of log-returns")
?acf
acf()
acf
source("GMVP/primary_model_GMVP.R")
setwd("~/Dropbox/HKUST/TFG/Chapter\ 1\ -\ Metalabeling/Code")
source("Other/tables.R")
source("Other/cusum.R")
source("Other/labels.R")
source("Other/features.R")
source("Other/ROC.R")
source("Other/misc.R")
source("Other/plots.R")
source("GMVP/primary_model_GMVP.R")
source("GMVP/secondary_model_GMVP.R")
source("GMVP/primary_model_ROC.R")
source("GMVP/auxiliary_functions_GMVP.R")
source("GMVP/full_returns_GMVP.R")
source("GMVP/discrete_returns_GMVP.R")
get_labels_primary_model
get_daily_vol
get_features_primary_model
